<style lang="less">
@import 'src/common/styles/config.less';
.shopcart{
    height: 100vh;
}

.shopcart-toolbar{
    display: block;
    width: 100%;
    height: 100rpx;
    position: fixed;
    bottom: 0;
    left: 0;
    margin: 0;
    padding: 0;
    z-index: 100;

    background-color: @color-maincolor;
    border-top: 2rpx solid @color-border;
    box-sizing: border-box;
    .price{
        font-size: @font-size-bigger;
        color: @color-success;
    }
    .submit{
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        border-radius: 0;
        &:after, &:before{
            border-radius: 0;
        }
    }
    .contain{
        flex-grow: 1;
        padding: @margin;
    }
}
</style>
<template>
<form report-submit="true" bindsubmit="formSubmit">
    <wxc-flex class="shopcart" dir="top">
        <block wx:for="{{shopcartList}}" wx:for-item="commodity" wx:key="commodity">
            <view class="shopcart-commodity">
                <view class="shopcart-commodity-checkbox" @tap.stop="tapCheckbox({{commodity.id}})">
                    <text class="icon icon-radio{{ commodity.isSelected ? '-cur': '' }}"></text>
                </view>
                <view class="shopcart-commodity-cover"></view>
                <view class="shopcart-commodity-main">
                    <view class="shopcart-commodity-title"></view>
                    <view class="shopcart-commodity-text"></view>
                    <wxc-flex class="shopcart-commodity-count" main="between" cross="center">
                        <wxc-price class="price" value="{{commodity.price}}"></wxc-price>
                        <wxc-counter number="{{commodity.count}}" max="{{commodity.maximum}}" min="1" bind:changenumber="onChangeCounter" id="{{commodity.id}}"></wxc-counter>
                    </wxc-flex>
                </view>
            </view>
        </block>
        <wxc-flex class="shopcart-toolbar">
            <wxc-flex class="contain" cross="center" main="between">
                <view>
                    <label @tap.stop="tapCheckboxAll()">
                        <text class="icon icon-radio{{ isSelectedAll ? '-cur': '' }}"></text>
                        <text>全选</text>
                    </label>
                </view>
                <view>
                    <text>合计：</text>
                    <wxc-price class="price" value="{{actualAmount}}"></wxc-price>
                </view>
            </wxc-flex>
            <button class="submit" type="base" size="bigger" form-type="submit">结算</button>
        </wxc-flex>
    </wxc-flex>
</form>
</template>
<script>
import wepy from 'wepy'
import { getStore, connect } from 'wepy-redux'
import { getShopCart, addShopCart, delShopCart } from '@/store/actions'
const store = getStore()

const __SHOPCART_LIST__ = [
    {
        id: 1,
        cover: 'https://t1.picb.cc/uploads/2018/02/22/KGQhG.png',
        title: '云之七味',
        type: '熟茶',
        price: '180.00',
        count: 1,
        maximum: 3,
        isSelected: true
    },
    {
        id: 2,
        cover: 'https://t1.picb.cc/uploads/2018/02/22/KGQhG.png',
        title: '糥伍古树圆茶',
        type: '熟茶',
        price: '920.00',
        count: 1,
        maximum: 3,
        isSelected: true
    }
]

@connect({
    uid: state => state.shopcart.uid,
    commodity: state => state.shopcart.commodity
})

export default class PageShopCart extends wepy.page {
    config = {
        navigationBarTitleText: '购物车',
        usingComponents: {
            'wxc-cc': '/packages/@minui/wxc-cc/dist/index',
            'wxc-flex': '/packages/@minui/wxc-flex/dist/index',
            'wxc-avatar': '/packages/@minui/wxc-avatar/dist/index',
            'wxc-badge': '/packages/@minui/wxc-badge/dist/index',
            'wxc-elip': '/packages/@minui/wxc-elip/dist/index',
            'wxc-icon': '/packages/@minui/wxc-icon/dist/index',
            'wxc-label': '/packages/@minui/wxc-label/dist/index',
            'wxc-loadmore': '/packages/@minui/wxc-loadmore/dist/index',
            'wxc-price': '/packages/@minui/wxc-price/dist/index',

            'wxc-abnor': '/packages/@minui/wxc-abnor/dist/index',
            'wxc-countdown': '/packages/@minui/wxc-countdown/dist/index',
            'wxc-counter': '/packages/@minui/wxc-counter/dist/index',
            'wxc-loading': '/packages/@minui/wxc-loading/dist/index',
            'wxc-mask': '/packages/@minui/wxc-mask/dist/index',
            'wxc-steps': '/packages/@minui/wxc-steps/dist/index',
            'wxc-tab': '/packages/@minui/wxc-tab/dist/index',
            'wxc-tab-panel': '/packages/@minui/wxc-tab/dist/panel',
            'wxc-tab-label': '/packages/@minui/wxc-tab/dist/label',

            'wxc-dialog': '/packages/@minui/wxc-dialog/dist/index',
            'wxc-popup': '/packages/@minui/wxc-popup/dist/index',
            'wxc-toast': '/packages/@minui/wxc-toast/dist/index'
        }
    }

    data = {
        isSelectedAll: false,
        shopcartList: __SHOPCART_LIST__,
        selectedList: [],
        actualAmount: '10.00',
    }

    methods = {
        tapCheckboxAll(){
            this.isSelectedAll = !this.isSelectedAll;
            this.shopcartList.map(item => {
                item.isSelected = this.isSelectedAll;
                return item;
            });
        },
        tapCheckbox(id){
            this.shopcartList.map(item => {
                if(item.id == id){
                    item.isSelected = !item.isSelected;
                }
                return item;
            });
            this.updateSelectedAll();
        },
        onChangeCounter(e){
            const { id } = e.currentTarget;
            const { number } = e.detail;
            this.shopcartList.map(item => {
                if(item.id == id){
                    item.count = number;
                }
            });
            this.setStorageShopcart();
        },
        formSubmit(e){
            console.log('去结算');
            console.log(e.detail.formId);

            //更新购物车缓存数据
            this.setStorageShopcart();

            wx.navigateTo({
                url: '/pages/order/confirm'
            })
        }
    }

    updateSelectedAll(){
        this.isSelectedAll = !this.shopcartList.find(n => !n.isSelected);
    }

    //设置购物车缓存数据
    setStorageShopcart(){
        console.log('更新购物车缓存数据');
        wx.setStorageSync('__SHOPCART_LIST__', this.shopcartList);
    }

    //设置购物车缓存数据
    getStorageShopcart(){
        console.log('更新购物车缓存数据');
        this.shopcartList = wx.getStorageSync('__SHOPCART_LIST__') || this.shopcartList;
    }

    onLoad() {
        store.dispatch(addShopCart({uid: 1, commodity: {id: 1}})).then(e => {
            console.log('then', this.$state.shopcart)
        })
        this.getStorageShopcart();
        this.updateSelectedAll();
    }
}

</script>
