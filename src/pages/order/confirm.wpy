<style lang="less">
@import 'src/common/styles/config.less';
.order-confirm-amount,
.order-confirm-property,
.order-confirm-toolbar,
.order-confirm-consignee,
.order-confirm-contain,
.order-confirm-message{
    padding: @margin;
    margin-top: @margin;
    background-color: @color-maincolor;
}
.order-confirm-consignee{
    margin-top: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}
.order-consignee-side{
    display: block;
    .icon{
        font-size: 40rpx;
    }
    .icon-address{
        color: @color-primary;
    }
    .icon-arrow-right{
        font-size: 60rpx;
    }
}
.order-consignee-main{
    flex-grow: 1;
    margin-left: @margin;
}
.order-consignee-name{
    margin-right: @margin;
}
.order-consignee-title{
    font-weight: 700;
    font-size: @font-size-large;
}
.order-consignee-address{
    margin-top: @margin/2;
}
.order-confirm-commodity{
    margin-top: 2rpx;
    background-color: @color-maincolor;
}
.order-confirm-amount{
    padding-bottom: 140rpx;
    .freight{
        display: block;
        margin-top: @margin/2;
    }
    .price{
        font-size: @font-size-bigger;
        color: @color-success;
    }
}
.order-confirm-property{
    margin-top: 2rpx;
    line-height: 1.8;
}
.order-confirm-contain{
    flex-grow: 1;
    padding: 0;
    background-color: transparent;
}
.order-confirm-message{
    height: 5.5em;
    line-height: 1.5em;
    padding: @margin/2 @margin;
}
.order-confirm-footer{
}
.order-confirm-toolbar{
    display: block;
    width: 100%;
    height: 100rpx;
    position: fixed;
    bottom: 0;
    left: 0;
    margin: 0;
    padding: 0;
    border-top: 2rpx solid @color-border;
    box-sizing: border-box;
    z-index: 100;
    .price{
        font-size: @font-size-bigger;
        color: @color-success;
    }
    .count{
        flex-grow: 1;
        padding: @margin;
        text-align: right;
    }
    .submit{
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        border-radius: 0;
        &:after, &:before{
            border-radius: 0;
        }
    }
}
.order-confirm{
    height: 100%;
}
</style>
<template>
<form report-submit="true" bindsubmit="formSubmit">
    <wxc-flex class="order-confirm" dir="top">
        <view class="order-confirm-consignee" @tap="tapConsignee()">
            <wxc-cc class="order-consignee-side">
                <text class="icon icon-address"></text>
            </wxc-cc>
            <view class="order-consignee-main" wx:if="{{consignee.id}}">
                <view class="order-consignee-title">
                    <text class="order-consignee-name">{{consignee.name}}</text>
                    <text class="order-consignee-tel">{{consignee.tel}}</text>
                </view>
                <view class="order-consignee-address">
                    <text>收货地址：</text>{{consignee.area +' '+ consignee.address}}
                </view>
            </view>
            <view class="order-consignee-main" wx:else>
                <view class="order-consignee-title">您还没有收货地址</view>
                <view class="order-consignee-address">请添加先添加收货地址</view>
            </view>
            <wxc-cc class="order-consignee-side">
                <text class="icon icon-arrow-right"></text>
            </wxc-cc>
        </view>
        <view class="order-confirm-contain">
            <repeat for="{{shopBuyList}}" item="commodity" key="commodity">
                <cp-order-commodity :commodity="commodity" class="order-confirm-commodity"></cp-order-commodity>
            </repeat>
        </view>
        <view class="order-confirm-footer">
            <view class="order-confirm-message">
                <textarea bindinput="input" bindblur="input" bindconfirm="input" value="{{message}}" data-store="message" cursor-spacing="20" maxlength="50" placeholder="选填：买家留言（50字以内）"></textarea>
            </view>
            <view class="order-confirm-amount">
                <wxc-flex class="amount" main="between" cross="center">
                    <text>商品总价</text>
                    <wxc-price class="price" value="{{totalAmount}}"></wxc-price>
                </wxc-flex>
                <wxc-flex class="freight" main="between" cross="center">
                    <text>运费（满200包邮）</text>
                    <wxc-price class="price" value="{{freightAmount}}"></wxc-price>
                </wxc-flex>
            </view>
        </view>
        <wxc-flex class="order-confirm-toolbar">
            <wxc-flex class="count" cross="center" main="end">
                <text>实付款：</text>
                <wxc-price class="price" value="{{actualAmount}}"></wxc-price>
            </wxc-flex>
            <button class="submit" type="base" size="bigger" form-type="submit">提交订单</button>
        </wxc-flex>
    </wxc-flex>
</form>
<wxc-popup id="addressPopup">
    <addressList></addressList>
</wxc-popup>
</template>
<script>

import wepy from 'wepy'
import inputMixin from '@/mixins/input'
import orderCommodity from '@/components/order-commodity'

import { getStore, connect } from 'wepy-redux'
import { getShopBuyList } from '@/store/actions'
const store = getStore()

@connect({
    shopBuyList: state => state.shopcart.shopBuyList,
    totalAmount: state => state.shopcart.totalAmount
})

export default class OrderDetail extends wepy.page {
    config = {
        navigationBarTitleText: '订单详情',
        usingComponents: {
            'wxc-cc': '/packages/@minui/wxc-cc/dist/index',
            'wxc-flex': '/packages/@minui/wxc-flex/dist/index',
            'wxc-avatar': '/packages/@minui/wxc-avatar/dist/index',
            'wxc-badge': '/packages/@minui/wxc-badge/dist/index',
            'wxc-elip': '/packages/@minui/wxc-elip/dist/index',
            'wxc-icon': '/packages/@minui/wxc-icon/dist/index',
            'wxc-label': '/packages/@minui/wxc-label/dist/index',
            'wxc-loadmore': '/packages/@minui/wxc-loadmore/dist/index',
            'wxc-price': '/packages/@minui/wxc-price/dist/index',

            'wxc-abnor': '/packages/@minui/wxc-abnor/dist/index',
            'wxc-countdown': '/packages/@minui/wxc-countdown/dist/index',
            'wxc-counter': '/packages/@minui/wxc-counter/dist/index',
            'wxc-loading': '/packages/@minui/wxc-loading/dist/index',
            'wxc-mask': '/packages/@minui/wxc-mask/dist/index',
            'wxc-steps': '/packages/@minui/wxc-steps/dist/index',
            'wxc-tab': '/packages/@minui/wxc-tab/dist/index',
            'wxc-tab-panel': '/packages/@minui/wxc-tab/dist/panel',
            'wxc-tab-label': '/packages/@minui/wxc-tab/dist/label',

            'wxc-dialog': '/packages/@minui/wxc-dialog/dist/index',
            'wxc-popup': '/packages/@minui/wxc-popup/dist/index',
            'wxc-toast': '/packages/@minui/wxc-toast/dist/index'
        }
    }

    components = {
        'cp-order-commodity': orderCommodity
    }

    mixins = [inputMixin]

    data = {
        message: '',
        consignee: {},
        freightAmount: '10.00',
    }

    methods = {
        tapConsignee(){
            if(this.consignee && this.consignee.id){
                wx.navigateTo({
                    url: `/pages/consignee/list?sid=${id}&from=order`
                })
            } else{
                wx.navigateTo({
                    url: `/pages/consignee/edit?from=order`
                })
            }
        },

        formSubmit(e){
            console.log(e.detail.formId);
            console.log('提交订单');

            wx.redirectTo({
                url: `/pages/order/detail?id=1`,
                // success: (res) => {
                //     //删除收货人缓存数据
                //     this.delStorageConsignee();
                // }
            })
        }
    }

    computed = {
        actualAmount() {
            let freightAmount = Number(this.freightAmount) != NaN ? Number(this.freightAmount) : 0
            let totalAmount = Number(this.totalAmount) != NaN ? Number(this.totalAmount) : 0
            return (totalAmount + freightAmount).toFixed(2)
        }
    }

    //获取收货人缓存数据
    getStorageConsignee(){
        this.consignee = wx.getStorageSync('__SELECTED_CONSIGNEE__') || this.consignee;
    }
    //删除收货人缓存数据
    delStorageConsignee(){
        wx.removeStorageSync('__SELECTED_CONSIGNEE__');
    }

    onLoad(res) {
        console.log(res);
        const param = { uid: 1 }
        store.dispatch(getShopBuyList(param));
    }

    onUnload() {
        // //删除收货人缓存数据
        // this.delStorageConsignee();
    }

    onShow(res) {
        //获取收货人缓存数据
        this.getStorageConsignee();
    }
}

</script>
